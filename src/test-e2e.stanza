#use-added-syntax(tests)
defpackage stanzaenv/test-e2e :
  import core
  import collections
  import zip

deftest test-stanzaenv-contents :

  ;Reset the testscratch folder.
  val root = "testscratch"
  delete-recursive(root)
  create-dir-recursive(root)

  ;Unzip the zip file contents. 
  val zip = "build/outputs/stanzaenv-os-x.zip"
  extract(ZipArchive(zip), root)

  ;List of expected files in .zip archive.
  val expected-files = [
    "bin/stanzaenv"]
    
  for file in expected-files do :
    val fullpath = string-join([root "/" file])
    #ASSERT(file-exists?(fullpath))
    #ASSERT(file-type(fullpath) is RegularFileType)

;Clear the scratch directory.
defn clear-scratch-dir () :
  ;Reset scratch directory.
  delete-recursive("testscratch")

  ;Create a scratch directory for testing.
  create-dir-recursive("testscratch")

  ;Here is the mock HOME directory.
  create-dir-recursive("testscratch/patrick")

;Try a fresh install with the given answers to the prompted questions.
defn try-fresh-install (prompts:String) :
  clear-scratch-dir()

  ;Here are questions to the prompts.
  spit("testscratch/prompts.txt", prompts)

  ;Run the installation command.
  val exe = "build/stanzaenv-os-x"
  call-system(exe,
              [exe, "install"]
              false,
              ["HOME" => resolve-path!("testscratch/patrick")
               "SHELL" => "/bin/zsh"
               "ENABLE_DEBUGENV" => ""
               "INTERCEPT_STANZA_URL" => "/Users/patricksli/Docs/Programming/stanzasite/resources/stanza"
               "INTERCEPT_STANZAENV_URL" => resolve-path!("build/outputs")
               "INTERCEPT_PROMPTS" => "testscratch/prompts.txt"])

deftest test-stanzaenv-install-0 :
  val prompts = \<STR>
    "installed in" => ""
    "system PATH" => "No"
    "initial version of Stanza" => "0.17.4"
  <STR>
  try-fresh-install(prompts)

deftest test-stanzaenv-install-1 :
  val prompts = \<STR>
    "installed in" => ""
    "system PATH" => "No"
    "initial version of Stanza" => "0.17.50"
  <STR>
  try-fresh-install(prompts)

deftest test-stanzaenv-install-2 :
  val prompts = \<STR>
    "installed in" => "testscratch/custom"
    "system PATH" => "Yes"
    "STANZAENV_DIR" => "Yes"
    "initial version of Stanza" => "0.17.4"
  <STR>
  try-fresh-install(prompts)

deftest test-stanzaenv-install-versions :
  clear-scratch-dir()

  ;Here are the questions to the prompts.
  val prompts = \<STR>
    "installed in" => "testscratch/custom"
    "system PATH" => "Yes"
    "STANZAENV_DIR" => "Yes"
    "initial version of Stanza" => "0.17.4"
  <STR>
  spit("testscratch/prompts.txt", prompts)

  ;Install the system.
  val exe = "build/stanzaenv-os-x"
  call-system(exe,
              [exe, "install"]
              false,
              ["HOME" => resolve-path!("testscratch/patrick")
               "SHELL" => "/bin/zsh"
               "ENABLE_DEBUGENV" => ""
               "INTERCEPT_STANZA_URL" => "/Users/patricksli/Docs/Programming/stanzasite/resources/stanza"
               "INTERCEPT_STANZAENV_URL" => resolve-path!("build/outputs")
               "INTERCEPT_PROMPTS" => "testscratch/prompts.txt"])  

  ;Install an additional version of Stanza.
  val install-exe = "testscratch/custom/bin/stanzaenv"
  call-system(install-exe,
              [install-exe, "install-version" "0.17.50"]
              false,
              ["HOME" => resolve-path!("testscratch/patrick")
               "SHELL" => "/bin/zsh"
               "STANZAENV_DIR" => "/Users/patricksli/Docs/Programming/stanzaenv/testscratch/custom"])

 ;Set the global version of Stanza.
  call-system(install-exe,
              [install-exe, "set-version" "0.17.50"]
              false,
              ["HOME" => resolve-path!("testscratch/patrick")
               "SHELL" => "/bin/zsh"
               "STANZAENV_DIR" => "/Users/patricksli/Docs/Programming/stanzaenv/testscratch/custom"])