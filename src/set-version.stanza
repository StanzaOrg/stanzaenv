defpackage stanzaenv/set-version :
  import core
  import collections
  import stanzaenv/versions
  import stanzaenv/system-api
  import stanzaenv/system-state
  import stanzaenv/config
  import stanzaenv/errors
  import stanzaenv/paths

;Set the global Stanza version currently being used.
public defn set-global-stanza-version (sys:System,
                                       version:VersionSpecifier,
                                       state:SystemState) -> False :
  within wrap-error(ConfigChangeError) :
    val config = ConfigFile([VersionStmt(version)])
    spit(sys, global-config-file(install-path(state)), config, false)
    println("Active Stanza version changed to '%_'." % [version])
    check-new-version(sys, state, version)

;Set the project Stanza version currently being used.
public defn set-project-stanza-version (sys:System,
                                        version:VersionSpecifier,
                                        state:SystemState) -> False :
  within wrap-error(ConfigChangeError) :
    val config = ConfigFile([VersionStmt(version)])
    val path = match(project-version(state)) :
      (pv:ProjectVersion) : filename(pv)
      (f:False) : project-config-file()
    spit(sys, path, config, false)
    println("Project Stanza version changed to '%_'." % [version])
    check-new-version(sys, state, version)

;Clears the currently-set Project version.
public defn clear-project-stanza-version (sys:System,
                                          state:SystemState) -> False :
  within wrap-error(ConfigChangeError) :
    match(project-version(state)) :
      (pv:ProjectVersion) :
        delete-recursive(sys, filename(pv))
        println("Deleted project-specific Stanza settings at '%_'." % [filename(pv)])        
      (f:False) :
        println("This directory does not make use of a project-specific Stanza version.")

;Check the validity of the new Stanza version, and
;print warnings.
defn check-new-version (sys:System,
                        state:SystemState,
                        version:VersionSpecifier) -> False :  
  match(version) :
    (version:NamedVersion) :
      if not installed?(state, version) :
        println("Warning: This Stanza version has not yet been installed. Please \
                 install it before using.")
    (version:LocalVersion) :
      val fullpath = stanza-exe-path(path(version))
      if not file-exists?(sys, fullpath) :
        println("Warning: There was no 'stanza' executable found at location '%_'." % [fullpath])
    (version:SystemVersion) :
      false