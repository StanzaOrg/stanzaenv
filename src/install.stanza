defpackage stanzaenv/install :
  import core
  import collections
  import stanzaenv/system-state
  import stanzaenv/system-api
  import stanzaenv/errors
  import stanzaenv/paths

public defn install-stanzaenv (sys:System) -> False :
  ;Check whether it's already installed.
  val install = check-already-installed(sys)

  if install is False :
    fresh-install(sys)
  else :
    report-already-installed(install)

;Check whether stanzaenv is already installed. Returns false
;if it is not. Throws an exception if the installation is
;corrupted or error occurs during confirmation.
defn check-already-installed (sys:System) -> EnvInstallation|False :
  match(get-env(sys, "STANZAENV_DIR")) :
    ;Supposed to be installed to a specific directory.
    (envdir:String) :
      if file-exists?(sys, envdir) :
        val path = relative-to(envdir, relpath-to-stanzaenv())
        if file-exists?(sys,path) : ConfigInstallation(envdir)
        else : throw(BadConfigInstallation(envdir))
    ;Supposed to be installed to the default directory.
    (f:False) :
      val dir = default-installation-dir()
      if file-exists?(sys, dir) :
        val path = relative-to(dir, relpath-to-stanzaenv())
        if file-exists?(sys,path) : DefaultInstallation(path)
        else : throw(BadDefaultInstallation(dir))
        
;Print out a message indicating that stanzaenv is already installed.
defn report-already-installed (install:EnvInstallation) -> False :
  match(install) :
    (install:DefaultInstallation) :
      println("Stanzaenv has already been installed to its default location: %~." % [
        path(install)])
    (install:ConfigInstallation) :
      println("Stanzaenv has already been installed to the location pointed to \
               by the STANZAENV_DIR environment variable: %~." % [path(install)])

;Perform a fresh install of the system.
defn fresh-install (sys:System) -> False :
  fatal("Not yet implemented")

defn relative-to (dir:String, path:String) -> String :
  fatal("Not yet implemented")